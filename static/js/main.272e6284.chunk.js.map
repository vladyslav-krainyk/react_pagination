{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","useState","pages","setPages","totalPages","Math","ceil","useEffect","pageNumbers","handlePageChange","page","className","classNames","disabled","href","onClick","map","active","ITEMS_PER_PAGE_OPTIONS","items","App","setCurrentPage","setPerPage","setTotal","navigate","useNavigate","location","useLocation","startIndex","endIndex","partOfItems","searchParams","URLSearchParams","window","search","pageParam","get","perPageParam","length","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,4BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,EAA0BC,mBAAmB,IAA7C,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAaC,KAAKC,KAAKT,EAAQC,GAErCS,qBAAU,WACR,IAAMC,EAAclB,EAAW,EAAGc,GAElCD,EAASK,KACR,CAACX,EAAOC,IAEX,IAAMW,EAAmB,SAACC,GACxBV,EAAaU,IAGf,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBd,IAHhB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACLC,QAAS,kBAAMN,EAAiBV,EAAc,IAC9C,gBAA+B,IAAhBA,EALjB,oBAUDG,EAAMc,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQlB,IAAgBW,IAJ9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,KAZEA,MAgBT,oBACEC,UAAWC,IACT,YACA,CAAEC,SAAUd,IAAgBK,IAHhC,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACLC,QAAS,kBAAMN,EAAiBV,EAAc,IAC9C,gBAAeA,IAAgBK,EALjC,0BCnEJc,G,MAAyB,CAAC,EAAG,EAAG,GAAI,KAGpCC,EAAQ7B,EAAW,EAAG,IAAI0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEpC0B,EAAgB,WAC3B,MAAsCnB,mBAAS,GAA/C,mBAAOF,EAAP,KAAoBsB,EAApB,KACA,EAA8BpB,mBAAS,GAAvC,mBAAOH,EAAP,KAAgBwB,EAAhB,KACA,EAA0BrB,mBAAS,GAAnC,mBAAOJ,EAAP,KAAc0B,EAAd,KAEMC,EAAWC,cACXC,EAAWC,cAaXC,GAAc7B,EAAc,GAAKD,EAAU,EAC3C+B,EAAWD,EAAa9B,EAAU,EAAID,EACxCA,EACA+B,EAAa9B,EAAU,EACrBgC,EAAcxC,EAAWsC,EAAYC,GAAUb,KAAI,SAAAtB,GAAC,qBAAYA,MA4BtE,OA1BAa,qBAAU,WACR,IAAMwB,EAAe,IAAIC,gBAAgBC,OAAOP,SAASQ,QACnDC,EAAYJ,EAAaK,IAAI,QAC7BC,EAAeN,EAAaK,IAAI,WAElCD,GAGFd,GAFmBc,GAKjBE,GAGFf,GAFsBe,KAIvB,CAACX,IAEJnB,qBAAU,WACRgB,EAASJ,EAAMmB,UACd,CAACnB,IAEJZ,qBAAU,WACRiB,EAAS,SAAD,OAAUzB,EAAV,oBAAiCD,MACxC,CAACC,EAAaD,EAAS0B,IAGxB,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC6B,EADjC,cACiDC,EADjD,eACgEhC,EADhE,OAIA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAO1C,EACP2C,SArDkB,SAACC,GAC3BpB,GAAYoB,EAAMC,OAAOH,OACzBnB,EAAe,GACfG,EAAS,mBAAD,QAAqBkB,EAAMC,OAAOH,SA6CpC,SAOGtB,EAAuBF,KAAI,SAAA4B,GAAM,OAChC,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA7EmB,SAACU,GACxBW,EAAeX,GACfc,EAAS,SAAD,OAAUd,EAAV,oBAA0BZ,OA8EhC,6BACGgC,EAAYd,KAAI,SAAA8B,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClGlCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.272e6284.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const [pages, setPages] = useState<number[]>([]);\n\n  const totalPages = Math.ceil(total / perPage);\n\n  useEffect(() => {\n    const pageNumbers = getNumbers(1, totalPages);\n\n    setPages(pageNumbers);\n  }, [total, perPage]);\n\n  const handlePageChange = (page: number) => {\n    onPageChange(page);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={() => handlePageChange(currentPage - 1)}\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: currentPage === page },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === totalPages },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() => handlePageChange(currentPage + 1)}\n            aria-disabled={currentPage === totalPages}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nimport './App.css';\n\nconst ITEMS_PER_PAGE_OPTIONS = [3, 5, 10, 20];\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const [total, setTotal] = useState(0);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    navigate(`?page=${page}&perPage=${perPage}`);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n    navigate(`?page=1&perPage=${+event.target.value}`);\n  };\n\n  const startIndex = (currentPage - 1) * perPage + 1;\n  const endIndex = startIndex + perPage - 1 > total\n    ? total\n    : startIndex + perPage - 1;\n  const partOfItems = getNumbers(startIndex, endIndex).map(n => `Item ${n}`);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const pageParam = searchParams.get('page');\n    const perPageParam = searchParams.get('perPage');\n\n    if (pageParam) {\n      const pageValue = +pageParam;\n\n      setCurrentPage(pageValue);\n    }\n\n    if (perPageParam) {\n      const perPageValue = +perPageParam;\n\n      setPerPage(perPageValue);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    setTotal(items.length);\n  }, [items]);\n\n  useEffect(() => {\n    navigate(`?page=${currentPage}&perPage=${perPage}`);\n  }, [currentPage, perPage, navigate]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {ITEMS_PER_PAGE_OPTIONS.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {partOfItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}